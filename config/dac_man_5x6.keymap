#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define RAISE   1
#define LOWER   2
#define QUICK   3
#define DOUBLE  4

&sk {
    release-after-ms = <350>;
    quick-release;
    ignore-modifiers;
};

/ {
    behaviors {
        qk: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "QUICK_HOLD_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            global-quick-tap;
            bindings =
                <&kp>,
                <&kp>;
        };
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <150>;
            bindings =
                <&kp GRAVE>,
                <&kp TILDE>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
  &kp ESC  &kp N1        &kp N2     &kp N3  &kp N4        &kp N5                                         &kp N6           &kp N7     &kp N8           &kp N9         &kp N0 &kp MINUS
    &kp TAB  &kp Q         &kp W      &kp E   &kp R         &kp T                                          &kp Y            &kp U      &kp I            &kp O          &kp P        &kp BSLH
  &kp LSHIFT   &kp A         &kp S      &kp D   &kp F         &kp G                                          &kp H            &kp J      &kp K            &kp L  &kp FSLH        &kp EQUAL
&kp LCTRL   &kp Z         &kp X      &kp C   &kp V         &kp B                                         &kp B  &kp N            &kp M  &kp SQT       &kp SEMI        &kp RSHIFT       
                   &kp LBKT &kp RBKT                                                                                        &kp COMMA  &kp DOT
                                             &kp ENTER     &kp SPACE                                      &kp SPACE  &kp ENTER
                                                    &kp LGUI      &mo 1           &mo 2    &kp RALT
                                                    &kp BSPC  &kp GRAVE           &kp RGUI  &kp DEL
            >;
        };

        raise {
            bindings = <
    &kp F1        &kp F2        &kp F3        &kp F4        &kp F5       &kp F6                       &kp F7        &kp F8         &kp F9      &kp F10       &kp F11     &kp F12
    &trans        &trans        &trans        &kp UP        &trans       &trans                       &trans        &trans         &kp UP      &trans        &kp C_MUTE      &kp C_PP
    &kp CAPS        &trans        &kp LEFT      &kp DOWN      &kp RIGHT    &trans                       &trans        &kp LEFT       &kp DOWN    &kp RIGHT     &kp C_VOL_DN    &kp C_NEXT
    &trans        &trans        &trans        &kp C_AL_CALC         &kp LPAR       &kp RPAR                       &trans        &trans         &trans      &trans        &kp C_VOL_UP  &kp C_PREV
                                &kp PG_UP     &kp PG_DN                                                                            &kp PG_UP   &kp PG_DN
                                                                &trans         &trans                         &trans            &trans
                                                                              &trans  &trans  &trans      &trans
                                                                        &trans  &trans   &trans       &trans
            >;
        };

        quick {
            bindings = <
     &qk F1 ESC         &qk F2 N1       &qk F3 N2       &qk F4 N3     &qk F5 N4       &qk F6 N5                               &qk F7 N6          &qk F8 N7            &qk F9 N8            &qk F10 N9           &qk F11 N0    &qk F12 PRINTSCREEN
&qk TILDE GRAVE        &qk EXCL Q        &qk AT W      &qk HASH E  &qk DOLLAR R   &qk PERCENT T                             &qk CARET Y    &qk AMPERSAND U       &qk ASTERISK I           &qk MINUS O           &qk PLUS P               &sk BSLH
        &kp TAB  &qk LEFT_SHIFT A  &qk LEFT_GUI S  &qk LEFT_ALT D   &qk LCTRL F      &qk PLUS G                              &qk LPAR H         &qk RPAR J   &qk LEFT_BRACKET K   &qk RIGHT_BRACKET L  &qk COLON SEMICOLON  &qk DOUBLE_QUOTES SQT
      &sk LCTRL  &qk LEFT_SHIFT Z  &qk LEFT_GUI X  &qk LEFT_ALT C   &qk LCTRL V     &qk MINUS B                        &qk LEFT_BRACE N  &qk RIGHT_BRACE M  &qk LESS_THAN COMMA  &qk GREATER_THAN DOT   &qk QUESTION SLASH         &qk PIPE UNDER
                                     &sk LEFT_GUI       &sk LCTRL                                                                                                     &sk RCTRL       &kp RIGHT_SHIFT
                                                                          &mo 4       &kp SPACE                               &kp ENTER    &lt 3 BACKSPACE
                                                                                 &sk LEFT_SHIFT  &none  &kp BACKSPACE             &none
                                                                                         &tog 2  &none          &none             &none
            >;
        };

        lower {
            bindings = <
   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2        &kp F4        &kp F5       &kp F6                       &kp F7        &kp F8         &kp F9      &kp F10       &kp F11     &kp F12
    &trans        &trans        &trans        &kp UP        &trans       &trans                       &trans        &trans         &kp UP      &trans        &kp C_MUTE      &kp C_PP
    &kp CAPS        &trans        &kp LEFT      &kp DOWN      &kp RIGHT    &trans                       &trans        &kp LEFT       &kp DOWN    &kp RIGHT     &kp C_VOL_DN    &kp C_NEXT
     &bt BT_CLR_ALL       &trans       &trans       &kp C_AL_CALC       &kp LPAR      &kp RPAR                    &trans        &trans         &trans      &trans        &kp C_VOL_UP  &kp C_PREV
                                &kp PG_UP     &kp PG_DN                                                                          &kp PG_UP   &kp PG_DN
                                                                &trans         &trans                &trans           &trans
                                                                        &trans  &trans               &trans      &trans
                                                                        &trans  &trans               &trans       &trans
            >;
        };

        double {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &none  &none  &none                            &none      &none                 &none                 &none                 &none  &none
  &bt BT_NXT         &none         &none  &none  &none  &none                &kp DOUBLE_QUOTES   &kp APOS  &kp LG(LA(NUMBER_1))  &kp LG(LA(NUMBER_2))  &kp LG(LA(NUMBER_3))  &none
  &bt BT_PRV         &none         &none  &none  &none  &none                        &kp EQUAL  &kp COLON  &kp LG(LA(NUMBER_4))  &kp LG(LA(NUMBER_5))  &kp LG(LA(NUMBER_6))  &none
  &bt BT_CLR         &none         &none  &none  &none  &none                        &kp TILDE  &kp QMARK  &kp LG(LA(NUMBER_7))  &kp LG(LA(NUMBER_8))  &kp LG(LA(NUMBER_9))  &none
                                   &none  &none                                                                           &none                 &none
                                                 &none  &none                            &none      &none
                                                        &none  &none  &none              &none
                                                        &none  &none  &none              &none
            >;
        };
    };
};
